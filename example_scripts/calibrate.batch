#!/bin/bash -l

#SBATCH --account=mwavcs
#SBATCH --job-name=vcs-calibrate
#SBATCH --output=%x-%j.out
#SBATCH --error=%x-%j.err
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=40
#SBATCH --partition=gpuq
#SBATCH --gres=tmp:50g,gpu:1
#SBATCH --time=01:00:00
#SBATCH --export=NONE
 
module use /pawsey/mwa/software/python3/modulefiles
module load hyperdrive
module load birli
module load srclists
module list
hyperdrive -V
birli -V

# Get the ObsID from the metafits filename
mfits=$(basename -- "$(ls ../*.metafits)")
obsid="${mfits%.*}"

# For brighter A-team sources, it may be better to use a specific sky model.
# Browse the $srclist_base directory and select a source list, e.g.
#
#   CenA: model-CenA-50comp_withalpha.txt
#   HerA: model-HerA-27comp_withalpha.txt
#   HydA: model-HydA-58comp_withalpha.txt
#   PicA: model-PicA-88comp_withalpha.txt
#
# If using a specific model, assign the source list to $srclist_target
srclist_target=
srclist_base=/pawsey/mwa/software/python3/mwa-reduce/mwa-reduce-git/models

if [[ -z $srclist_target ]]; then
    # Create a list of 1000 sources from a catalogue
    srclist=srclist_1000.yaml
    # Standard puma
    catalogue_srclist=${SRCLISTS_DIR}/srclist_pumav3_EoR0aegean_fixedEoR1pietro+ForA_phase1+2.txt
    # GLEAM-X
    #catalogue_srclist=/astro/mwavcs/cplee/remote_backup/source_lists/GGSM_updated.txt

    hyperdrive srclist-by-beam \
        -n 1000 \
        -m ../*.metafits \
        $catalogue_srclist \
        $srclist
else
    # Use a specific source list
    srclist=${srclist_base}/${srclist_target}
fi

fres=40             # desired freq. resolution in kHz for cal. UVFITS
tres=2              # desired time resolution in seconds for cal. UVFITS
flag_edge_chans=1   # number of edge fine channels to flag

# Make the downsampled uvfits data if it's not already there
if [[ ! -r ../${obsid}_birli.uvfits ]]; then
    birli \
        -m ../*.metafits \
        -u /nvmetmp/${obsid}_birli.uvfits \
        --avg-time-res ${tres} \
        --avg-freq-res ${fres} \
        --flag-edge-chans ${flag_edge_chans} \
        ../*ch???*.fits
    cp /nvmetmp/${obsid}_birli.uvfits ../${obsid}_birli.uvfits
fi

# Perform DI calibration
# If necessary, flag tiles with --tile-flags <Tile1> <Tile2> ... <TileN>)
hyperdrive di-calibrate \
    -s $srclist \
    -d ../${obsid}_birli.uvfits \
    ../*.metafits

# Plot the solutions
hyperdrive solutions-plot \
    -m ../*.metafits \
    hyperdrive_solutions.fits

# Convert to Offringa format for VCSBeam
hyperdrive solutions-convert \
    -m ../*.metafits \
    hyperdrive_solutions.fits \
    hyperdrive_solutions.bin