#!/bin/bash -l

#SBATCH --account=mwavcs
#SBATCH --job-name=vcs-calibrate
#SBATCH --output=%x-%j.out
#SBATCH --error=%x-%j.err
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=40
#SBATCH --partition=gpuq
#SBATCH --gres=tmp:50g,gpu:1
#SBATCH --time=01:00:00
#SBATCH --export=NONE
 
module use /pawsey/mwa/software/python3/modulefiles
module load hyperdrive/peel
module load birli
module list

############################## NOTE ##############################
# This script should be placed in a directory called "hyperdrive", 
# and the calibration visibility data and metafits files should 
# be in the parent directory (i.e., ../).
##################################################################

mfits=$(basename -- "$(ls ../*.metafits)")
obsid="${mfits%.*}"  # observation ID of calibrator

# Select a source list - in most cases this is probably okay, but for brighter A-team sources 
# you may want to use their specific models -
#
#    HerA: model-HerA-27comp_withalpha.txt
#   3C444: model-3C444-10comp_withalpha.txt
#    HydA: model-HydA-58comp_withalpha.txt
#    PicA: model-PicA-88comp_withalpha.txt
#
# (have a look in the directory noted in the $srclistBase variable below for the full list.
# If using one of the above, put the model filename in the $srclistTarget variable.
srclistTarget=
srclistBase=/pawsey/mwa/software/python3/mwa-reduce/mwa-reduce-git/models
if [[ -z "$srclistTarget" ]]; then
    srclist=/pawsey/mwa/software/python3/srclists/master/srclist_pumav3_EoR0aegean_fixedEoR1pietro+ForA_phase1+2.txt
else
    srclist=${srclistBase}/${srclistTarget}
fi

fres=40  # desired freq. resolution in kHz for cal. UVFITS
tres=2  # desired time resolution in seconds for cal. UVFITS

# DO THE THINGS
# make the downsampled uvfits data if it's not already there
if [[ ! -r ../${obsid}_birli.uvfits ]]; then
    birli ../*ch???*.fits -m ../*.metafits -u /nvmetmp/${obsid}_birli.uvfits --avg-time-res ${tres} --avg-freq-res ${fres}
    cp /nvmetmp/${obsid}_birli.uvfits ../${obsid}_birli.uvfits
fi

# do DI calibration (if necessary, flag tiles with: --tile-flags <tile1> ... <tileN>)
hyperdrive di-calibrate -s ${srclist} -d ../${obsid}_birli.uvfits ../*.metafits

# plot the solutions, will create two PNGs for amps and phase:
#       inspect these, and any that don't appear to converge (i.e., non-linear ramp in phase) 
#       should be flagged in the above command and resubmit the job
hyperdrive solutions-plot -m ../*.metafits hyperdrive_solutions.fits

# convert to AO-style solutions, that VCSbeam can read
hyperdrive solutions-convert -m ../*.metafits hyperdrive_solutions.fits hyperdrive_solutions.bin
